// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot-test ChatDialog component if isModify = false Renders correct properties 1`] = `
<WithStyles(ChatDialog)
  chat={
    Object {
      "_id": "_id",
      "avatar": "avatar",
      "title": "title",
      "users": Array [],
    }
  }
  closeChatDialog={[MockFunction]}
  getUsers={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  isModify={false}
  onAddChat={[MockFunction]}
  onSaveChat={[MockFunction]}
  users={
    Array [
      Object {
        "_id": "_id",
        "avatar": "avatar",
        "email": "email",
        "name": "name",
      },
    ]
  }
>
  <ChatDialog
    chat={
      Object {
        "_id": "_id",
        "avatar": "avatar",
        "title": "title",
        "users": Array [],
      }
    }
    classes={Object {}}
    closeChatDialog={[MockFunction]}
    getUsers={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    isModify={false}
    onAddChat={[MockFunction]}
    onSaveChat={[MockFunction]}
    users={
      Array [
        Object {
          "_id": "_id",
          "avatar": "avatar",
          "email": "email",
          "name": "name",
        },
      ]
    }
  >
    <Component
      onClose={[MockFunction]}
      open={true}
    >
      <div
        originalcomponent="Dialog"
        testprops={
          Object {
            "children": Array [
              <Unknown>
                Add chat
              </Unknown>,
              <Unknown>
                <ValidatorForm
                  debounceTime={0}
                  id="validatorForm"
                  onError={[Function]}
                  onSubmit={[Function]}
                >
                  <Unknown
                    avatarFileInput={
                      Object {
                        "current": null,
                      }
                    }
                    onChange={[Function]}
                  />
                  <TextValidator
                    color="primary"
                    errorMessages={
                      Array [
                        "this field is required",
                      ]
                    }
                    fullWidth={true}
                    id="title"
                    label="Title *"
                    margin="normal"
                    name="title"
                    onChange={[Function]}
                    validatorListener={[Function]}
                    validators={
                      Array [
                        "required",
                      ]
                    }
                    value=""
                  />
                  <TextValidator
                    color="primary"
                    errorMessages="error"
                    fullWidth={true}
                    id="searchText"
                    label="Search"
                    margin="normal"
                    name="searchText"
                    onChange={[Function]}
                    validatorListener={[Function]}
                    validators={Array []}
                    value=""
                  />
                  <Unknown>
                    <Unknown
                      button={true}
                      onClick={[Function]}
                      selected={false}
                    >
                      <Unknown
                        author="name"
                        avatar="avatar"
                      />
                      <Unknown
                        primary="name (email)"
                      />
                    </Unknown>
                  </Unknown>
                </ValidatorForm>
              </Unknown>,
              <Unknown>
                <Unknown
                  color="primary"
                  form="validatorForm"
                  type="submit"
                >
                  Add
                </Unknown>
                <Unknown
                  color="primary"
                  onClick={[MockFunction]}
                >
                  Close
                </Unknown>
              </Unknown>,
            ],
            "onClose": [MockFunction],
            "open": true,
          }
        }
      >
        <Component>
          <div
            originalcomponent="DialogTitle"
            testprops={
              Object {
                "children": "Add chat",
              }
            }
          >
            Add chat
          </div>
        </Component>
        <Component>
          <div
            originalcomponent="DialogContent"
            testprops={
              Object {
                "children": <ValidatorForm
                  debounceTime={0}
                  id="validatorForm"
                  onError={[Function]}
                  onSubmit={[Function]}
                >
                  <Unknown
                    avatarFileInput={
                      Object {
                        "current": null,
                      }
                    }
                    onChange={[Function]}
                  />
                  <TextValidator
                    color="primary"
                    errorMessages={
                      Array [
                        "this field is required",
                      ]
                    }
                    fullWidth={true}
                    id="title"
                    label="Title *"
                    margin="normal"
                    name="title"
                    onChange={[Function]}
                    validatorListener={[Function]}
                    validators={
                      Array [
                        "required",
                      ]
                    }
                    value=""
                  />
                  <TextValidator
                    color="primary"
                    errorMessages="error"
                    fullWidth={true}
                    id="searchText"
                    label="Search"
                    margin="normal"
                    name="searchText"
                    onChange={[Function]}
                    validatorListener={[Function]}
                    validators={Array []}
                    value=""
                  />
                  <Unknown>
                    <Unknown
                      button={true}
                      onClick={[Function]}
                      selected={false}
                    >
                      <Unknown
                        author="name"
                        avatar="avatar"
                      />
                      <Unknown
                        primary="name (email)"
                      />
                    </Unknown>
                  </Unknown>
                </ValidatorForm>,
              }
            }
          >
            <ValidatorForm
              debounceTime={0}
              id="validatorForm"
              onError={[Function]}
              onSubmit={[Function]}
            >
              <form
                id="validatorForm"
                onSubmit={[Function]}
              >
                <Component
                  avatarFileInput={
                    Object {
                      "current": null,
                    }
                  }
                  onChange={[Function]}
                >
                  <div
                    originalcomponent="AvatarSelector"
                    testprops={
                      Object {
                        "avatar": undefined,
                        "avatarFileInput": Object {
                          "current": null,
                        },
                        "onChange": [Function],
                      }
                    }
                  />
                </Component>
                <TextValidator
                  color="primary"
                  errorMessages={
                    Array [
                      "this field is required",
                    ]
                  }
                  fullWidth={true}
                  id="title"
                  label="Title *"
                  margin="normal"
                  name="title"
                  onChange={[Function]}
                  validatorListener={[Function]}
                  validators={
                    Array [
                      "required",
                    ]
                  }
                  value=""
                >
                  <TextField
                    color="primary"
                    fullWidth={true}
                    id="title"
                    label="Title *"
                    margin="normal"
                    name="title"
                    onChange={[Function]}
                    required={false}
                    select={false}
                    value=""
                    variant="standard"
                  >
                    <WithStyles(FormControl)
                      color="primary"
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <FormControl
                        classes={
                          Object {
                            "fullWidth": "MuiFormControl-fullWidth-4",
                            "marginDense": "MuiFormControl-marginDense-3",
                            "marginNormal": "MuiFormControl-marginNormal-2",
                            "root": "MuiFormControl-root-1",
                          }
                        }
                        color="primary"
                        component="div"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        margin="normal"
                        required={false}
                        variant="standard"
                      >
                        <div
                          className="MuiFormControl-root-1 MuiFormControl-marginNormal-2 MuiFormControl-fullWidth-4"
                          color="primary"
                        >
                          <WithStyles(WithFormControlContext(InputLabel))
                            htmlFor="title"
                          >
                            <WithFormControlContext(InputLabel)
                              classes={
                                Object {
                                  "animated": "MuiInputLabel-animated-13",
                                  "disabled": "MuiInputLabel-disabled-7",
                                  "error": "MuiInputLabel-error-8",
                                  "filled": "MuiInputLabel-filled-14",
                                  "focused": "MuiInputLabel-focused-6",
                                  "formControl": "MuiInputLabel-formControl-10",
                                  "marginDense": "MuiInputLabel-marginDense-11",
                                  "outlined": "MuiInputLabel-outlined-15",
                                  "required": "MuiInputLabel-required-9",
                                  "root": "MuiInputLabel-root-5",
                                  "shrink": "MuiInputLabel-shrink-12",
                                }
                              }
                              htmlFor="title"
                            >
                              <InputLabel
                                classes={
                                  Object {
                                    "animated": "MuiInputLabel-animated-13",
                                    "disabled": "MuiInputLabel-disabled-7",
                                    "error": "MuiInputLabel-error-8",
                                    "filled": "MuiInputLabel-filled-14",
                                    "focused": "MuiInputLabel-focused-6",
                                    "formControl": "MuiInputLabel-formControl-10",
                                    "marginDense": "MuiInputLabel-marginDense-11",
                                    "outlined": "MuiInputLabel-outlined-15",
                                    "required": "MuiInputLabel-required-9",
                                    "root": "MuiInputLabel-root-5",
                                    "shrink": "MuiInputLabel-shrink-12",
                                  }
                                }
                                disableAnimation={false}
                                htmlFor="title"
                                muiFormControl={
                                  Object {
                                    "adornedStart": false,
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "margin": "normal",
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "required": false,
                                    "variant": "standard",
                                  }
                                }
                              >
                                <WithStyles(WithFormControlContext(FormLabel))
                                  className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                  classes={
                                    Object {
                                      "disabled": "MuiInputLabel-disabled-7",
                                      "error": "MuiInputLabel-error-8",
                                      "focused": "MuiInputLabel-focused-6",
                                      "required": "MuiInputLabel-required-9",
                                    }
                                  }
                                  data-shrink={false}
                                  htmlFor="title"
                                >
                                  <WithFormControlContext(FormLabel)
                                    className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                    classes={
                                      Object {
                                        "asterisk": "MuiFormLabel-asterisk-22",
                                        "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                        "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                        "filled": "MuiFormLabel-filled-20",
                                        "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                        "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                        "root": "MuiFormLabel-root-16",
                                      }
                                    }
                                    data-shrink={false}
                                    htmlFor="title"
                                  >
                                    <FormLabel
                                      className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                      classes={
                                        Object {
                                          "asterisk": "MuiFormLabel-asterisk-22",
                                          "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                          "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                          "filled": "MuiFormLabel-filled-20",
                                          "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                          "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                          "root": "MuiFormLabel-root-16",
                                        }
                                      }
                                      component="label"
                                      data-shrink={false}
                                      htmlFor="title"
                                      muiFormControl={
                                        Object {
                                          "adornedStart": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "margin": "normal",
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "required": false,
                                          "variant": "standard",
                                        }
                                      }
                                    >
                                      <label
                                        className="MuiFormLabel-root-16 MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                        data-shrink={false}
                                        htmlFor="title"
                                      >
                                        Title *
                                      </label>
                                    </FormLabel>
                                  </WithFormControlContext(FormLabel)>
                                </WithStyles(WithFormControlContext(FormLabel))>
                              </InputLabel>
                            </WithFormControlContext(InputLabel)>
                          </WithStyles(WithFormControlContext(InputLabel))>
                          <WithStyles(Input)
                            fullWidth={true}
                            id="title"
                            name="title"
                            onChange={[Function]}
                            value=""
                          >
                            <Input
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-26",
                                  "error": "MuiInput-error-28",
                                  "focused": "MuiInput-focused-25",
                                  "formControl": "MuiInput-formControl-24",
                                  "fullWidth": "MuiInput-fullWidth-30",
                                  "input": "MuiInput-input-31",
                                  "inputMarginDense": "MuiInput-inputMarginDense-32",
                                  "inputMultiline": "MuiInput-inputMultiline-33",
                                  "inputType": "MuiInput-inputType-34",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                  "multiline": "MuiInput-multiline-29",
                                  "root": "MuiInput-root-23",
                                  "underline": "MuiInput-underline-27",
                                }
                              }
                              fullWidth={true}
                              id="title"
                              name="title"
                              onChange={[Function]}
                              value=""
                            >
                              <WithStyles(WithFormControlContext(InputBase))
                                classes={
                                  Object {
                                    "disabled": "MuiInput-disabled-26",
                                    "error": "MuiInput-error-28",
                                    "focused": "MuiInput-focused-25",
                                    "formControl": "MuiInput-formControl-24",
                                    "fullWidth": "MuiInput-fullWidth-30",
                                    "input": "MuiInput-input-31",
                                    "inputMarginDense": "MuiInput-inputMarginDense-32",
                                    "inputMultiline": "MuiInput-inputMultiline-33",
                                    "inputType": "MuiInput-inputType-34",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                    "multiline": "MuiInput-multiline-29",
                                    "root": "MuiInput-root-23 MuiInput-underline-27",
                                    "underline": null,
                                  }
                                }
                                fullWidth={true}
                                id="title"
                                inputComponent="input"
                                multiline={false}
                                name="title"
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <WithFormControlContext(InputBase)
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-41",
                                      "adornedStart": "MuiInputBase-adornedStart-40",
                                      "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                      "error": "MuiInputBase-error-42 MuiInput-error-28",
                                      "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                      "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                      "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                      "input": "MuiInputBase-input-46 MuiInput-input-31",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                      "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                      "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                      "marginDense": "MuiInputBase-marginDense-43",
                                      "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                      "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                    }
                                  }
                                  fullWidth={true}
                                  id="title"
                                  inputComponent="input"
                                  multiline={false}
                                  name="title"
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <InputBase
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd-41",
                                        "adornedStart": "MuiInputBase-adornedStart-40",
                                        "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                        "error": "MuiInputBase-error-42 MuiInput-error-28",
                                        "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                        "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                        "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                        "input": "MuiInputBase-input-46 MuiInput-input-31",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                        "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                        "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                        "marginDense": "MuiInputBase-marginDense-43",
                                        "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                        "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                      }
                                    }
                                    fullWidth={true}
                                    id="title"
                                    inputComponent="input"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": false,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    name="title"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  >
                                    <div
                                      className="MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27 MuiInputBase-fullWidth-45 MuiInput-fullWidth-30 MuiInputBase-formControl-37 MuiInput-formControl-24"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-invalid={false}
                                        className="MuiInputBase-input-46 MuiInput-input-31"
                                        disabled={false}
                                        id="title"
                                        name="title"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </InputBase>
                                </WithFormControlContext(InputBase)>
                              </WithStyles(WithFormControlContext(InputBase))>
                            </Input>
                          </WithStyles(Input)>
                        </div>
                      </FormControl>
                    </WithStyles(FormControl)>
                  </TextField>
                </TextValidator>
                <TextValidator
                  color="primary"
                  errorMessages="error"
                  fullWidth={true}
                  id="searchText"
                  label="Search"
                  margin="normal"
                  name="searchText"
                  onChange={[Function]}
                  validatorListener={[Function]}
                  validators={Array []}
                  value=""
                >
                  <TextField
                    color="primary"
                    fullWidth={true}
                    id="searchText"
                    label="Search"
                    margin="normal"
                    name="searchText"
                    onChange={[Function]}
                    required={false}
                    select={false}
                    value=""
                    variant="standard"
                  >
                    <WithStyles(FormControl)
                      color="primary"
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <FormControl
                        classes={
                          Object {
                            "fullWidth": "MuiFormControl-fullWidth-4",
                            "marginDense": "MuiFormControl-marginDense-3",
                            "marginNormal": "MuiFormControl-marginNormal-2",
                            "root": "MuiFormControl-root-1",
                          }
                        }
                        color="primary"
                        component="div"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        margin="normal"
                        required={false}
                        variant="standard"
                      >
                        <div
                          className="MuiFormControl-root-1 MuiFormControl-marginNormal-2 MuiFormControl-fullWidth-4"
                          color="primary"
                        >
                          <WithStyles(WithFormControlContext(InputLabel))
                            htmlFor="searchText"
                          >
                            <WithFormControlContext(InputLabel)
                              classes={
                                Object {
                                  "animated": "MuiInputLabel-animated-13",
                                  "disabled": "MuiInputLabel-disabled-7",
                                  "error": "MuiInputLabel-error-8",
                                  "filled": "MuiInputLabel-filled-14",
                                  "focused": "MuiInputLabel-focused-6",
                                  "formControl": "MuiInputLabel-formControl-10",
                                  "marginDense": "MuiInputLabel-marginDense-11",
                                  "outlined": "MuiInputLabel-outlined-15",
                                  "required": "MuiInputLabel-required-9",
                                  "root": "MuiInputLabel-root-5",
                                  "shrink": "MuiInputLabel-shrink-12",
                                }
                              }
                              htmlFor="searchText"
                            >
                              <InputLabel
                                classes={
                                  Object {
                                    "animated": "MuiInputLabel-animated-13",
                                    "disabled": "MuiInputLabel-disabled-7",
                                    "error": "MuiInputLabel-error-8",
                                    "filled": "MuiInputLabel-filled-14",
                                    "focused": "MuiInputLabel-focused-6",
                                    "formControl": "MuiInputLabel-formControl-10",
                                    "marginDense": "MuiInputLabel-marginDense-11",
                                    "outlined": "MuiInputLabel-outlined-15",
                                    "required": "MuiInputLabel-required-9",
                                    "root": "MuiInputLabel-root-5",
                                    "shrink": "MuiInputLabel-shrink-12",
                                  }
                                }
                                disableAnimation={false}
                                htmlFor="searchText"
                                muiFormControl={
                                  Object {
                                    "adornedStart": false,
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "margin": "normal",
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "required": false,
                                    "variant": "standard",
                                  }
                                }
                              >
                                <WithStyles(WithFormControlContext(FormLabel))
                                  className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                  classes={
                                    Object {
                                      "disabled": "MuiInputLabel-disabled-7",
                                      "error": "MuiInputLabel-error-8",
                                      "focused": "MuiInputLabel-focused-6",
                                      "required": "MuiInputLabel-required-9",
                                    }
                                  }
                                  data-shrink={false}
                                  htmlFor="searchText"
                                >
                                  <WithFormControlContext(FormLabel)
                                    className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                    classes={
                                      Object {
                                        "asterisk": "MuiFormLabel-asterisk-22",
                                        "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                        "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                        "filled": "MuiFormLabel-filled-20",
                                        "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                        "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                        "root": "MuiFormLabel-root-16",
                                      }
                                    }
                                    data-shrink={false}
                                    htmlFor="searchText"
                                  >
                                    <FormLabel
                                      className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                      classes={
                                        Object {
                                          "asterisk": "MuiFormLabel-asterisk-22",
                                          "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                          "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                          "filled": "MuiFormLabel-filled-20",
                                          "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                          "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                          "root": "MuiFormLabel-root-16",
                                        }
                                      }
                                      component="label"
                                      data-shrink={false}
                                      htmlFor="searchText"
                                      muiFormControl={
                                        Object {
                                          "adornedStart": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "margin": "normal",
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "required": false,
                                          "variant": "standard",
                                        }
                                      }
                                    >
                                      <label
                                        className="MuiFormLabel-root-16 MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                        data-shrink={false}
                                        htmlFor="searchText"
                                      >
                                        Search
                                      </label>
                                    </FormLabel>
                                  </WithFormControlContext(FormLabel)>
                                </WithStyles(WithFormControlContext(FormLabel))>
                              </InputLabel>
                            </WithFormControlContext(InputLabel)>
                          </WithStyles(WithFormControlContext(InputLabel))>
                          <WithStyles(Input)
                            fullWidth={true}
                            id="searchText"
                            name="searchText"
                            onChange={[Function]}
                            value=""
                          >
                            <Input
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-26",
                                  "error": "MuiInput-error-28",
                                  "focused": "MuiInput-focused-25",
                                  "formControl": "MuiInput-formControl-24",
                                  "fullWidth": "MuiInput-fullWidth-30",
                                  "input": "MuiInput-input-31",
                                  "inputMarginDense": "MuiInput-inputMarginDense-32",
                                  "inputMultiline": "MuiInput-inputMultiline-33",
                                  "inputType": "MuiInput-inputType-34",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                  "multiline": "MuiInput-multiline-29",
                                  "root": "MuiInput-root-23",
                                  "underline": "MuiInput-underline-27",
                                }
                              }
                              fullWidth={true}
                              id="searchText"
                              name="searchText"
                              onChange={[Function]}
                              value=""
                            >
                              <WithStyles(WithFormControlContext(InputBase))
                                classes={
                                  Object {
                                    "disabled": "MuiInput-disabled-26",
                                    "error": "MuiInput-error-28",
                                    "focused": "MuiInput-focused-25",
                                    "formControl": "MuiInput-formControl-24",
                                    "fullWidth": "MuiInput-fullWidth-30",
                                    "input": "MuiInput-input-31",
                                    "inputMarginDense": "MuiInput-inputMarginDense-32",
                                    "inputMultiline": "MuiInput-inputMultiline-33",
                                    "inputType": "MuiInput-inputType-34",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                    "multiline": "MuiInput-multiline-29",
                                    "root": "MuiInput-root-23 MuiInput-underline-27",
                                    "underline": null,
                                  }
                                }
                                fullWidth={true}
                                id="searchText"
                                inputComponent="input"
                                multiline={false}
                                name="searchText"
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <WithFormControlContext(InputBase)
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-41",
                                      "adornedStart": "MuiInputBase-adornedStart-40",
                                      "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                      "error": "MuiInputBase-error-42 MuiInput-error-28",
                                      "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                      "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                      "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                      "input": "MuiInputBase-input-46 MuiInput-input-31",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                      "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                      "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                      "marginDense": "MuiInputBase-marginDense-43",
                                      "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                      "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                    }
                                  }
                                  fullWidth={true}
                                  id="searchText"
                                  inputComponent="input"
                                  multiline={false}
                                  name="searchText"
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <InputBase
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd-41",
                                        "adornedStart": "MuiInputBase-adornedStart-40",
                                        "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                        "error": "MuiInputBase-error-42 MuiInput-error-28",
                                        "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                        "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                        "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                        "input": "MuiInputBase-input-46 MuiInput-input-31",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                        "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                        "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                        "marginDense": "MuiInputBase-marginDense-43",
                                        "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                        "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                      }
                                    }
                                    fullWidth={true}
                                    id="searchText"
                                    inputComponent="input"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": false,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    name="searchText"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  >
                                    <div
                                      className="MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27 MuiInputBase-fullWidth-45 MuiInput-fullWidth-30 MuiInputBase-formControl-37 MuiInput-formControl-24"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-invalid={false}
                                        className="MuiInputBase-input-46 MuiInput-input-31"
                                        disabled={false}
                                        id="searchText"
                                        name="searchText"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </InputBase>
                                </WithFormControlContext(InputBase)>
                              </WithStyles(WithFormControlContext(InputBase))>
                            </Input>
                          </WithStyles(Input)>
                        </div>
                      </FormControl>
                    </WithStyles(FormControl)>
                  </TextField>
                </TextValidator>
                <Component>
                  <div
                    originalcomponent="List"
                    testprops={
                      Object {
                        "children": Array [
                          <Unknown
                            button={true}
                            onClick={[Function]}
                            selected={false}
                          >
                            <Unknown
                              author="name"
                              avatar="avatar"
                            />
                            <Unknown
                              primary="name (email)"
                            />
                          </Unknown>,
                        ],
                      }
                    }
                  >
                    <Component
                      button={true}
                      key="_id"
                      onClick={[Function]}
                      selected={false}
                    >
                      <div
                        originalcomponent="ListItem"
                        testprops={
                          Object {
                            "button": true,
                            "children": Array [
                              <Unknown
                                author="name"
                                avatar="avatar"
                              />,
                              <Unknown
                                primary="name (email)"
                              />,
                            ],
                            "onClick": [Function],
                            "selected": false,
                          }
                        }
                      >
                        <Component
                          author="name"
                          avatar="avatar"
                        >
                          <div
                            originalcomponent="UsersAvatar"
                            testprops={
                              Object {
                                "author": "name",
                                "avatar": "avatar",
                              }
                            }
                          />
                        </Component>
                        <Component
                          primary="name (email)"
                        >
                          <div
                            originalcomponent="ListItemText"
                            testprops={
                              Object {
                                "primary": "name (email)",
                              }
                            }
                          />
                        </Component>
                      </div>
                    </Component>
                  </div>
                </Component>
              </form>
            </ValidatorForm>
          </div>
        </Component>
        <Component>
          <div
            originalcomponent="DialogActions"
            testprops={
              Object {
                "children": Array [
                  <Unknown
                    color="primary"
                    form="validatorForm"
                    type="submit"
                  >
                    Add
                  </Unknown>,
                  <Unknown
                    color="primary"
                    onClick={[MockFunction]}
                  >
                    Close
                  </Unknown>,
                ],
              }
            }
          >
            <Component
              color="primary"
              form="validatorForm"
              type="submit"
            >
              <div
                originalcomponent="Button"
                testprops={
                  Object {
                    "children": "Add",
                    "color": "primary",
                    "form": "validatorForm",
                    "type": "submit",
                  }
                }
              >
                Add
              </div>
            </Component>
            <Component
              color="primary"
              onClick={[MockFunction]}
            >
              <div
                originalcomponent="Button"
                testprops={
                  Object {
                    "children": "Close",
                    "color": "primary",
                    "onClick": [MockFunction],
                  }
                }
              >
                Close
              </div>
            </Component>
          </div>
        </Component>
      </div>
    </Component>
  </ChatDialog>
</WithStyles(ChatDialog)>
`;

exports[`snapshot-test ChatDialog component if isModify = true Renders correct properties 1`] = `
<WithStyles(ChatDialog)
  chat={
    Object {
      "_id": "_id",
      "avatar": "avatar",
      "title": "title",
      "users": Array [],
    }
  }
  closeChatDialog={[MockFunction]}
  getUsers={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  isModify={true}
  onAddChat={[MockFunction]}
  onSaveChat={[MockFunction]}
  users={
    Array [
      Object {
        "_id": "_id",
        "avatar": "avatar",
        "email": "email",
        "name": "name",
      },
    ]
  }
>
  <ChatDialog
    chat={
      Object {
        "_id": "_id",
        "avatar": "avatar",
        "title": "title",
        "users": Array [],
      }
    }
    classes={Object {}}
    closeChatDialog={[MockFunction]}
    getUsers={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    isModify={true}
    onAddChat={[MockFunction]}
    onSaveChat={[MockFunction]}
    users={
      Array [
        Object {
          "_id": "_id",
          "avatar": "avatar",
          "email": "email",
          "name": "name",
        },
      ]
    }
  >
    <Component
      onClose={[MockFunction]}
      open={true}
    >
      <div
        originalcomponent="Dialog"
        testprops={
          Object {
            "children": Array [
              <Unknown>
                Modify chat
              </Unknown>,
              <Unknown>
                <ValidatorForm
                  debounceTime={0}
                  id="validatorForm"
                  onError={[Function]}
                  onSubmit={[Function]}
                >
                  <Unknown
                    avatar="avatar"
                    avatarFileInput={
                      Object {
                        "current": null,
                      }
                    }
                    onChange={[Function]}
                  />
                  <TextValidator
                    color="primary"
                    errorMessages={
                      Array [
                        "this field is required",
                      ]
                    }
                    fullWidth={true}
                    id="title"
                    label="Title *"
                    margin="normal"
                    name="title"
                    onChange={[Function]}
                    validatorListener={[Function]}
                    validators={
                      Array [
                        "required",
                      ]
                    }
                    value="title"
                  />
                  <TextValidator
                    color="primary"
                    errorMessages="error"
                    fullWidth={true}
                    id="searchText"
                    label="Search"
                    margin="normal"
                    name="searchText"
                    onChange={[Function]}
                    validatorListener={[Function]}
                    validators={Array []}
                    value=""
                  />
                  <Unknown>
                    <Unknown
                      button={true}
                      onClick={[Function]}
                      selected={false}
                    >
                      <Unknown
                        author="name"
                        avatar="avatar"
                      />
                      <Unknown
                        primary="name (email)"
                      />
                    </Unknown>
                  </Unknown>
                </ValidatorForm>
              </Unknown>,
              <Unknown>
                <Unknown
                  color="primary"
                  form="validatorForm"
                  type="submit"
                >
                  Save
                </Unknown>
                <Unknown
                  color="primary"
                  onClick={[MockFunction]}
                >
                  Close
                </Unknown>
              </Unknown>,
            ],
            "onClose": [MockFunction],
            "open": true,
          }
        }
      >
        <Component>
          <div
            originalcomponent="DialogTitle"
            testprops={
              Object {
                "children": "Modify chat",
              }
            }
          >
            Modify chat
          </div>
        </Component>
        <Component>
          <div
            originalcomponent="DialogContent"
            testprops={
              Object {
                "children": <ValidatorForm
                  debounceTime={0}
                  id="validatorForm"
                  onError={[Function]}
                  onSubmit={[Function]}
                >
                  <Unknown
                    avatar="avatar"
                    avatarFileInput={
                      Object {
                        "current": null,
                      }
                    }
                    onChange={[Function]}
                  />
                  <TextValidator
                    color="primary"
                    errorMessages={
                      Array [
                        "this field is required",
                      ]
                    }
                    fullWidth={true}
                    id="title"
                    label="Title *"
                    margin="normal"
                    name="title"
                    onChange={[Function]}
                    validatorListener={[Function]}
                    validators={
                      Array [
                        "required",
                      ]
                    }
                    value="title"
                  />
                  <TextValidator
                    color="primary"
                    errorMessages="error"
                    fullWidth={true}
                    id="searchText"
                    label="Search"
                    margin="normal"
                    name="searchText"
                    onChange={[Function]}
                    validatorListener={[Function]}
                    validators={Array []}
                    value=""
                  />
                  <Unknown>
                    <Unknown
                      button={true}
                      onClick={[Function]}
                      selected={false}
                    >
                      <Unknown
                        author="name"
                        avatar="avatar"
                      />
                      <Unknown
                        primary="name (email)"
                      />
                    </Unknown>
                  </Unknown>
                </ValidatorForm>,
              }
            }
          >
            <ValidatorForm
              debounceTime={0}
              id="validatorForm"
              onError={[Function]}
              onSubmit={[Function]}
            >
              <form
                id="validatorForm"
                onSubmit={[Function]}
              >
                <Component
                  avatar="avatar"
                  avatarFileInput={
                    Object {
                      "current": null,
                    }
                  }
                  onChange={[Function]}
                >
                  <div
                    originalcomponent="AvatarSelector"
                    testprops={
                      Object {
                        "avatar": "avatar",
                        "avatarFileInput": Object {
                          "current": null,
                        },
                        "onChange": [Function],
                      }
                    }
                  />
                </Component>
                <TextValidator
                  color="primary"
                  errorMessages={
                    Array [
                      "this field is required",
                    ]
                  }
                  fullWidth={true}
                  id="title"
                  label="Title *"
                  margin="normal"
                  name="title"
                  onChange={[Function]}
                  validatorListener={[Function]}
                  validators={
                    Array [
                      "required",
                    ]
                  }
                  value="title"
                >
                  <TextField
                    color="primary"
                    fullWidth={true}
                    id="title"
                    label="Title *"
                    margin="normal"
                    name="title"
                    onChange={[Function]}
                    required={false}
                    select={false}
                    value="title"
                    variant="standard"
                  >
                    <WithStyles(FormControl)
                      color="primary"
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <FormControl
                        classes={
                          Object {
                            "fullWidth": "MuiFormControl-fullWidth-4",
                            "marginDense": "MuiFormControl-marginDense-3",
                            "marginNormal": "MuiFormControl-marginNormal-2",
                            "root": "MuiFormControl-root-1",
                          }
                        }
                        color="primary"
                        component="div"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        margin="normal"
                        required={false}
                        variant="standard"
                      >
                        <div
                          className="MuiFormControl-root-1 MuiFormControl-marginNormal-2 MuiFormControl-fullWidth-4"
                          color="primary"
                        >
                          <WithStyles(WithFormControlContext(InputLabel))
                            htmlFor="title"
                          >
                            <WithFormControlContext(InputLabel)
                              classes={
                                Object {
                                  "animated": "MuiInputLabel-animated-13",
                                  "disabled": "MuiInputLabel-disabled-7",
                                  "error": "MuiInputLabel-error-8",
                                  "filled": "MuiInputLabel-filled-14",
                                  "focused": "MuiInputLabel-focused-6",
                                  "formControl": "MuiInputLabel-formControl-10",
                                  "marginDense": "MuiInputLabel-marginDense-11",
                                  "outlined": "MuiInputLabel-outlined-15",
                                  "required": "MuiInputLabel-required-9",
                                  "root": "MuiInputLabel-root-5",
                                  "shrink": "MuiInputLabel-shrink-12",
                                }
                              }
                              htmlFor="title"
                            >
                              <InputLabel
                                classes={
                                  Object {
                                    "animated": "MuiInputLabel-animated-13",
                                    "disabled": "MuiInputLabel-disabled-7",
                                    "error": "MuiInputLabel-error-8",
                                    "filled": "MuiInputLabel-filled-14",
                                    "focused": "MuiInputLabel-focused-6",
                                    "formControl": "MuiInputLabel-formControl-10",
                                    "marginDense": "MuiInputLabel-marginDense-11",
                                    "outlined": "MuiInputLabel-outlined-15",
                                    "required": "MuiInputLabel-required-9",
                                    "root": "MuiInputLabel-root-5",
                                    "shrink": "MuiInputLabel-shrink-12",
                                  }
                                }
                                disableAnimation={false}
                                htmlFor="title"
                                muiFormControl={
                                  Object {
                                    "adornedStart": false,
                                    "disabled": false,
                                    "error": false,
                                    "filled": true,
                                    "focused": false,
                                    "margin": "normal",
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "required": false,
                                    "variant": "standard",
                                  }
                                }
                              >
                                <WithStyles(WithFormControlContext(FormLabel))
                                  className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13 MuiInputLabel-shrink-12"
                                  classes={
                                    Object {
                                      "disabled": "MuiInputLabel-disabled-7",
                                      "error": "MuiInputLabel-error-8",
                                      "focused": "MuiInputLabel-focused-6",
                                      "required": "MuiInputLabel-required-9",
                                    }
                                  }
                                  data-shrink={true}
                                  htmlFor="title"
                                >
                                  <WithFormControlContext(FormLabel)
                                    className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13 MuiInputLabel-shrink-12"
                                    classes={
                                      Object {
                                        "asterisk": "MuiFormLabel-asterisk-22",
                                        "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                        "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                        "filled": "MuiFormLabel-filled-20",
                                        "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                        "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                        "root": "MuiFormLabel-root-16",
                                      }
                                    }
                                    data-shrink={true}
                                    htmlFor="title"
                                  >
                                    <FormLabel
                                      className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13 MuiInputLabel-shrink-12"
                                      classes={
                                        Object {
                                          "asterisk": "MuiFormLabel-asterisk-22",
                                          "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                          "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                          "filled": "MuiFormLabel-filled-20",
                                          "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                          "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                          "root": "MuiFormLabel-root-16",
                                        }
                                      }
                                      component="label"
                                      data-shrink={true}
                                      htmlFor="title"
                                      muiFormControl={
                                        Object {
                                          "adornedStart": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": true,
                                          "focused": false,
                                          "margin": "normal",
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "required": false,
                                          "variant": "standard",
                                        }
                                      }
                                    >
                                      <label
                                        className="MuiFormLabel-root-16 MuiFormLabel-filled-20 MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13 MuiInputLabel-shrink-12"
                                        data-shrink={true}
                                        htmlFor="title"
                                      >
                                        Title *
                                      </label>
                                    </FormLabel>
                                  </WithFormControlContext(FormLabel)>
                                </WithStyles(WithFormControlContext(FormLabel))>
                              </InputLabel>
                            </WithFormControlContext(InputLabel)>
                          </WithStyles(WithFormControlContext(InputLabel))>
                          <WithStyles(Input)
                            fullWidth={true}
                            id="title"
                            name="title"
                            onChange={[Function]}
                            value="title"
                          >
                            <Input
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-26",
                                  "error": "MuiInput-error-28",
                                  "focused": "MuiInput-focused-25",
                                  "formControl": "MuiInput-formControl-24",
                                  "fullWidth": "MuiInput-fullWidth-30",
                                  "input": "MuiInput-input-31",
                                  "inputMarginDense": "MuiInput-inputMarginDense-32",
                                  "inputMultiline": "MuiInput-inputMultiline-33",
                                  "inputType": "MuiInput-inputType-34",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                  "multiline": "MuiInput-multiline-29",
                                  "root": "MuiInput-root-23",
                                  "underline": "MuiInput-underline-27",
                                }
                              }
                              fullWidth={true}
                              id="title"
                              name="title"
                              onChange={[Function]}
                              value="title"
                            >
                              <WithStyles(WithFormControlContext(InputBase))
                                classes={
                                  Object {
                                    "disabled": "MuiInput-disabled-26",
                                    "error": "MuiInput-error-28",
                                    "focused": "MuiInput-focused-25",
                                    "formControl": "MuiInput-formControl-24",
                                    "fullWidth": "MuiInput-fullWidth-30",
                                    "input": "MuiInput-input-31",
                                    "inputMarginDense": "MuiInput-inputMarginDense-32",
                                    "inputMultiline": "MuiInput-inputMultiline-33",
                                    "inputType": "MuiInput-inputType-34",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                    "multiline": "MuiInput-multiline-29",
                                    "root": "MuiInput-root-23 MuiInput-underline-27",
                                    "underline": null,
                                  }
                                }
                                fullWidth={true}
                                id="title"
                                inputComponent="input"
                                multiline={false}
                                name="title"
                                onChange={[Function]}
                                type="text"
                                value="title"
                              >
                                <WithFormControlContext(InputBase)
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-41",
                                      "adornedStart": "MuiInputBase-adornedStart-40",
                                      "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                      "error": "MuiInputBase-error-42 MuiInput-error-28",
                                      "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                      "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                      "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                      "input": "MuiInputBase-input-46 MuiInput-input-31",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                      "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                      "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                      "marginDense": "MuiInputBase-marginDense-43",
                                      "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                      "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                    }
                                  }
                                  fullWidth={true}
                                  id="title"
                                  inputComponent="input"
                                  multiline={false}
                                  name="title"
                                  onChange={[Function]}
                                  type="text"
                                  value="title"
                                >
                                  <InputBase
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd-41",
                                        "adornedStart": "MuiInputBase-adornedStart-40",
                                        "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                        "error": "MuiInputBase-error-42 MuiInput-error-28",
                                        "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                        "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                        "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                        "input": "MuiInputBase-input-46 MuiInput-input-31",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                        "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                        "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                        "marginDense": "MuiInputBase-marginDense-43",
                                        "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                        "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                      }
                                    }
                                    fullWidth={true}
                                    id="title"
                                    inputComponent="input"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": true,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": false,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    name="title"
                                    onChange={[Function]}
                                    type="text"
                                    value="title"
                                  >
                                    <div
                                      className="MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27 MuiInputBase-fullWidth-45 MuiInput-fullWidth-30 MuiInputBase-formControl-37 MuiInput-formControl-24"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-invalid={false}
                                        className="MuiInputBase-input-46 MuiInput-input-31"
                                        disabled={false}
                                        id="title"
                                        name="title"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        type="text"
                                        value="title"
                                      />
                                    </div>
                                  </InputBase>
                                </WithFormControlContext(InputBase)>
                              </WithStyles(WithFormControlContext(InputBase))>
                            </Input>
                          </WithStyles(Input)>
                        </div>
                      </FormControl>
                    </WithStyles(FormControl)>
                  </TextField>
                </TextValidator>
                <TextValidator
                  color="primary"
                  errorMessages="error"
                  fullWidth={true}
                  id="searchText"
                  label="Search"
                  margin="normal"
                  name="searchText"
                  onChange={[Function]}
                  validatorListener={[Function]}
                  validators={Array []}
                  value=""
                >
                  <TextField
                    color="primary"
                    fullWidth={true}
                    id="searchText"
                    label="Search"
                    margin="normal"
                    name="searchText"
                    onChange={[Function]}
                    required={false}
                    select={false}
                    value=""
                    variant="standard"
                  >
                    <WithStyles(FormControl)
                      color="primary"
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <FormControl
                        classes={
                          Object {
                            "fullWidth": "MuiFormControl-fullWidth-4",
                            "marginDense": "MuiFormControl-marginDense-3",
                            "marginNormal": "MuiFormControl-marginNormal-2",
                            "root": "MuiFormControl-root-1",
                          }
                        }
                        color="primary"
                        component="div"
                        disabled={false}
                        error={false}
                        fullWidth={true}
                        margin="normal"
                        required={false}
                        variant="standard"
                      >
                        <div
                          className="MuiFormControl-root-1 MuiFormControl-marginNormal-2 MuiFormControl-fullWidth-4"
                          color="primary"
                        >
                          <WithStyles(WithFormControlContext(InputLabel))
                            htmlFor="searchText"
                          >
                            <WithFormControlContext(InputLabel)
                              classes={
                                Object {
                                  "animated": "MuiInputLabel-animated-13",
                                  "disabled": "MuiInputLabel-disabled-7",
                                  "error": "MuiInputLabel-error-8",
                                  "filled": "MuiInputLabel-filled-14",
                                  "focused": "MuiInputLabel-focused-6",
                                  "formControl": "MuiInputLabel-formControl-10",
                                  "marginDense": "MuiInputLabel-marginDense-11",
                                  "outlined": "MuiInputLabel-outlined-15",
                                  "required": "MuiInputLabel-required-9",
                                  "root": "MuiInputLabel-root-5",
                                  "shrink": "MuiInputLabel-shrink-12",
                                }
                              }
                              htmlFor="searchText"
                            >
                              <InputLabel
                                classes={
                                  Object {
                                    "animated": "MuiInputLabel-animated-13",
                                    "disabled": "MuiInputLabel-disabled-7",
                                    "error": "MuiInputLabel-error-8",
                                    "filled": "MuiInputLabel-filled-14",
                                    "focused": "MuiInputLabel-focused-6",
                                    "formControl": "MuiInputLabel-formControl-10",
                                    "marginDense": "MuiInputLabel-marginDense-11",
                                    "outlined": "MuiInputLabel-outlined-15",
                                    "required": "MuiInputLabel-required-9",
                                    "root": "MuiInputLabel-root-5",
                                    "shrink": "MuiInputLabel-shrink-12",
                                  }
                                }
                                disableAnimation={false}
                                htmlFor="searchText"
                                muiFormControl={
                                  Object {
                                    "adornedStart": false,
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "margin": "normal",
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "required": false,
                                    "variant": "standard",
                                  }
                                }
                              >
                                <WithStyles(WithFormControlContext(FormLabel))
                                  className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                  classes={
                                    Object {
                                      "disabled": "MuiInputLabel-disabled-7",
                                      "error": "MuiInputLabel-error-8",
                                      "focused": "MuiInputLabel-focused-6",
                                      "required": "MuiInputLabel-required-9",
                                    }
                                  }
                                  data-shrink={false}
                                  htmlFor="searchText"
                                >
                                  <WithFormControlContext(FormLabel)
                                    className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                    classes={
                                      Object {
                                        "asterisk": "MuiFormLabel-asterisk-22",
                                        "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                        "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                        "filled": "MuiFormLabel-filled-20",
                                        "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                        "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                        "root": "MuiFormLabel-root-16",
                                      }
                                    }
                                    data-shrink={false}
                                    htmlFor="searchText"
                                  >
                                    <FormLabel
                                      className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                      classes={
                                        Object {
                                          "asterisk": "MuiFormLabel-asterisk-22",
                                          "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                          "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                          "filled": "MuiFormLabel-filled-20",
                                          "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                          "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                          "root": "MuiFormLabel-root-16",
                                        }
                                      }
                                      component="label"
                                      data-shrink={false}
                                      htmlFor="searchText"
                                      muiFormControl={
                                        Object {
                                          "adornedStart": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "margin": "normal",
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "required": false,
                                          "variant": "standard",
                                        }
                                      }
                                    >
                                      <label
                                        className="MuiFormLabel-root-16 MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                        data-shrink={false}
                                        htmlFor="searchText"
                                      >
                                        Search
                                      </label>
                                    </FormLabel>
                                  </WithFormControlContext(FormLabel)>
                                </WithStyles(WithFormControlContext(FormLabel))>
                              </InputLabel>
                            </WithFormControlContext(InputLabel)>
                          </WithStyles(WithFormControlContext(InputLabel))>
                          <WithStyles(Input)
                            fullWidth={true}
                            id="searchText"
                            name="searchText"
                            onChange={[Function]}
                            value=""
                          >
                            <Input
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-26",
                                  "error": "MuiInput-error-28",
                                  "focused": "MuiInput-focused-25",
                                  "formControl": "MuiInput-formControl-24",
                                  "fullWidth": "MuiInput-fullWidth-30",
                                  "input": "MuiInput-input-31",
                                  "inputMarginDense": "MuiInput-inputMarginDense-32",
                                  "inputMultiline": "MuiInput-inputMultiline-33",
                                  "inputType": "MuiInput-inputType-34",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                  "multiline": "MuiInput-multiline-29",
                                  "root": "MuiInput-root-23",
                                  "underline": "MuiInput-underline-27",
                                }
                              }
                              fullWidth={true}
                              id="searchText"
                              name="searchText"
                              onChange={[Function]}
                              value=""
                            >
                              <WithStyles(WithFormControlContext(InputBase))
                                classes={
                                  Object {
                                    "disabled": "MuiInput-disabled-26",
                                    "error": "MuiInput-error-28",
                                    "focused": "MuiInput-focused-25",
                                    "formControl": "MuiInput-formControl-24",
                                    "fullWidth": "MuiInput-fullWidth-30",
                                    "input": "MuiInput-input-31",
                                    "inputMarginDense": "MuiInput-inputMarginDense-32",
                                    "inputMultiline": "MuiInput-inputMultiline-33",
                                    "inputType": "MuiInput-inputType-34",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                    "multiline": "MuiInput-multiline-29",
                                    "root": "MuiInput-root-23 MuiInput-underline-27",
                                    "underline": null,
                                  }
                                }
                                fullWidth={true}
                                id="searchText"
                                inputComponent="input"
                                multiline={false}
                                name="searchText"
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <WithFormControlContext(InputBase)
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-41",
                                      "adornedStart": "MuiInputBase-adornedStart-40",
                                      "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                      "error": "MuiInputBase-error-42 MuiInput-error-28",
                                      "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                      "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                      "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                      "input": "MuiInputBase-input-46 MuiInput-input-31",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                      "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                      "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                      "marginDense": "MuiInputBase-marginDense-43",
                                      "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                      "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                    }
                                  }
                                  fullWidth={true}
                                  id="searchText"
                                  inputComponent="input"
                                  multiline={false}
                                  name="searchText"
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <InputBase
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd-41",
                                        "adornedStart": "MuiInputBase-adornedStart-40",
                                        "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                        "error": "MuiInputBase-error-42 MuiInput-error-28",
                                        "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                        "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                        "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                        "input": "MuiInputBase-input-46 MuiInput-input-31",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                        "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                        "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                        "marginDense": "MuiInputBase-marginDense-43",
                                        "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                        "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                      }
                                    }
                                    fullWidth={true}
                                    id="searchText"
                                    inputComponent="input"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": false,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    name="searchText"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  >
                                    <div
                                      className="MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27 MuiInputBase-fullWidth-45 MuiInput-fullWidth-30 MuiInputBase-formControl-37 MuiInput-formControl-24"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-invalid={false}
                                        className="MuiInputBase-input-46 MuiInput-input-31"
                                        disabled={false}
                                        id="searchText"
                                        name="searchText"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        required={false}
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </InputBase>
                                </WithFormControlContext(InputBase)>
                              </WithStyles(WithFormControlContext(InputBase))>
                            </Input>
                          </WithStyles(Input)>
                        </div>
                      </FormControl>
                    </WithStyles(FormControl)>
                  </TextField>
                </TextValidator>
                <Component>
                  <div
                    originalcomponent="List"
                    testprops={
                      Object {
                        "children": Array [
                          <Unknown
                            button={true}
                            onClick={[Function]}
                            selected={false}
                          >
                            <Unknown
                              author="name"
                              avatar="avatar"
                            />
                            <Unknown
                              primary="name (email)"
                            />
                          </Unknown>,
                        ],
                      }
                    }
                  >
                    <Component
                      button={true}
                      key="_id"
                      onClick={[Function]}
                      selected={false}
                    >
                      <div
                        originalcomponent="ListItem"
                        testprops={
                          Object {
                            "button": true,
                            "children": Array [
                              <Unknown
                                author="name"
                                avatar="avatar"
                              />,
                              <Unknown
                                primary="name (email)"
                              />,
                            ],
                            "onClick": [Function],
                            "selected": false,
                          }
                        }
                      >
                        <Component
                          author="name"
                          avatar="avatar"
                        >
                          <div
                            originalcomponent="UsersAvatar"
                            testprops={
                              Object {
                                "author": "name",
                                "avatar": "avatar",
                              }
                            }
                          />
                        </Component>
                        <Component
                          primary="name (email)"
                        >
                          <div
                            originalcomponent="ListItemText"
                            testprops={
                              Object {
                                "primary": "name (email)",
                              }
                            }
                          />
                        </Component>
                      </div>
                    </Component>
                  </div>
                </Component>
              </form>
            </ValidatorForm>
          </div>
        </Component>
        <Component>
          <div
            originalcomponent="DialogActions"
            testprops={
              Object {
                "children": Array [
                  <Unknown
                    color="primary"
                    form="validatorForm"
                    type="submit"
                  >
                    Save
                  </Unknown>,
                  <Unknown
                    color="primary"
                    onClick={[MockFunction]}
                  >
                    Close
                  </Unknown>,
                ],
              }
            }
          >
            <Component
              color="primary"
              form="validatorForm"
              type="submit"
            >
              <div
                originalcomponent="Button"
                testprops={
                  Object {
                    "children": "Save",
                    "color": "primary",
                    "form": "validatorForm",
                    "type": "submit",
                  }
                }
              >
                Save
              </div>
            </Component>
            <Component
              color="primary"
              onClick={[MockFunction]}
            >
              <div
                originalcomponent="Button"
                testprops={
                  Object {
                    "children": "Close",
                    "color": "primary",
                    "onClick": [MockFunction],
                  }
                }
              >
                Close
              </div>
            </Component>
          </div>
        </Component>
      </div>
    </Component>
  </ChatDialog>
</WithStyles(ChatDialog)>
`;
